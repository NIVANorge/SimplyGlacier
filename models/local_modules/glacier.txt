
module("SimplyGlacier", version(0, 0, 0),
	air : compartment,
	glacier : compartment,
	snow_box : compartment,
	soil : compartment,
	ice : quantity,
	snow : quantity,
	water : quantity,
	temp : property,
	flow : property,
	runoff_target : loc,
) {
"""
The beginnings of a simple glacier module that can be extended if necessary.

Authors: Leah A. Jackson-Blake, Magnus D. Norling
"""
	load("stdlib/basic_math.txt", library("Response"), library("Basic"))
	
	# Parameters
	par_group("Glacier global") {
		perc_frac : par_real("Glacier percolation fraction", [], 0.1, 0, 1, "Proportion of glacier water flow that percolates down to the underlying ground vs going directly to the reach")
		ddf_ice   : par_real("Degree-day factor for ice melt", [m m, deg_c-1, day-1], 3, 1, 15)
		snowtoice : par_real("Glacier accumulation coefficient", [day-1], 0, 0, 1e-3, "Proportion of overlying snow which becomes glacier ice (for roughly appropriate glacier mass balance)")
	}
	
	par_group("Glacier", glacier) {
		init_ice : par_real("Initial ice thickness", [m m], 0)
	}
	
	ice_epsilon : constant("Ice epsilon", [m m], 1e-6)  # Just for numerically safe testing of ice thickness > 0
	t_melt      : constant("Ice melt temperature", [deg_c], 0)  # Could be made a parameter
	
	# Variables
	var(glacier.ice, [m m], "Glacier ice") @initial { init_ice }
	
	var(glacier.water, [m m], "Glacier melt water")
	
	var(glacier.water.flow, [m m, day-1], "Glacier melt water flow") {
		in_flux(water)
	}
	
	# Seibert et al. (2018) have a more complex version of this, varying with snow
	# depth. However, don't have glacier melt unless snow is gone, so simplify for now
	# https://hess.copernicus.org/articles/22/2211/2018/
	#var(glacier.water.flow, [m m, day-1], "Glacier melt water flow") {
		#water * (K_min + K_range * exp(-A_G * aggregate(snow_box.snow)))            
	#}
	
	# FLUXES
	# When glacier ice is not present in this compartment (i.e. when the initial glacier ice thickness for this patch = 0), then this compartment is entirely passive. Fluxes from the snow compartment just pass straight through to the soil water compartment and no glacier accumulation occurs. When glacier ice is present, accumulation and melt occur, and melt water either goes directly to the river reach or percolates to the soil water compartment.

	flux(snow_box.snow, glacier.ice, [m m, day-1], "Glacier accumulation") {
		snowtoice * snow   if last(glacier.ice) > ice_epsilon,
		0                  otherwise
	}
	
	flux(glacier.ice, glacier.water, [m m, day-1], "Glacier melt") {
		# Smoothly turn-off glacial melt as a function of snow depth (melt goes from max_melt to 0 as snow depth goes from 0 to 5 cm. Quick literature review suggested 5 cm was about appropriate)
		max_melt := max(0, ddf_ice*(air.temp - t_melt)),
		s_response(snow_box.snow, 0[m m], 50[m m], max_melt, 0[m m])
	}
	
	# Flux of water going either downhill to lower glaciers or to the river
	flux(glacier.water, runoff_target, [m m, day-1], "Glacial runoff") {
		(1-perc_frac)*flow     if ice > ice_epsilon,
		0                      otherwise
	}
			
	flux(glacier.water, soil.water, [m m, day-1], "Glacial input to soil water") {
		perc_frac*flow     if ice > ice_epsilon,
		flow               otherwise
	}
}